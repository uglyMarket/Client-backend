plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.required.set(true) // XML 리포트 생성
        csv.required.set(false) // CSV 리포트는 생성하지 않음
        html.required.set(true) // HTML 리포트 생성

        // 리포트가 저장될 경로 설정
        html.destination file("jacoco/jacocoHtml")
        xml.destination file("jacoco/jacoco.xml")
    }
}

tasks.jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS' // 전체 프로젝트 단위로 체크

            // 전체 커버리지의 최소값
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.80 // 최소 커버리지 80%
            }
        }
    }
}

dependencies {

    //mockito테스트
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.12.0'


    implementation 'org.springframework.security:spring-security-core'//BCrypt(암호화) 라이브러리 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
